version: '3.7'
networks:
  public_net:
    driver: bridge
    ipam:
      config:
      - subnet: 172.168.0.0/24
      driver: default
services:
  healthconnect-0:
    image: $HCIMAGE
    init: true
    command: 
      --key /license/iris.key
    hostname: healthconnect-0
    container_name: healthconnect-0
    restart: "no"
    environment: 
      - ISC_CPF_MERGE_FILE=/tmp/scripts/merge-mirror.cpf
    depends_on:
      - arbiter
    volumes:
    - type: bind
      source: ./license/iris/$LICENSE/iris.key
      target: /license/iris.key
    - type: bind
      source: ./scripts
      target: /tmp/scripts
    - type: bind
      source: ./code/healthconnect-user/src
      target: /code
    - shared-volume:/tmp
    networks:
      public_net:
        ipv4_address: 172.168.0.22
  webgateway-0:
    image: $WGIMAGE
    init: true
    hostname: webgateway-0
    container_name: webgateway-0
    depends_on:
      - healthconnect-0
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
    - "8081:80"
    expose:
    - "80"
    restart: "no"
    volumes:
    - ./webgateway/CSP-000.ini:/opt/webgateway/bin/CSP.ini
    - ./webgateway/CSP.conf:/etc/apache2/mods-available/CSP.conf
    networks:
      public_net:
        ipv4_address: 172.168.0.20
  webgateway-0-dedicated:
    image: $WGIMAGE
    init: true
    hostname: webgateway-0-dedicated
    container_name: webgateway-0-dedicated
    depends_on:
      - healthconnect-0
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
    - "8082:80"
    expose:
    - "80"
    restart: "no"
    volumes:
    - ./webgateway/CSP-000-dedicated.ini:/opt/webgateway/bin/CSP.ini
    - ./webgateway/CSP.conf:/etc/apache2/mods-available/CSP.conf
    networks:
      public_net:
        ipv4_address: 172.168.0.21
  healthconnect-1:
    image: $HCIMAGE
    init: true
    command: 
      --key /license/iris.key
    hostname: healthconnect-1
    container_name: healthconnect-1
    restart: "no"
    environment: 
      - ISC_CPF_MERGE_FILE=/tmp/scripts/merge-mirror.cpf
    depends_on:
      - arbiter
    volumes:
    - type: bind
      source: ./license/iris/$LICENSE/iris.key
      target: /license/iris.key
    - type: bind
      source: ./scripts
      target: /tmp/scripts
    - type: bind
      source: ./code/healthconnect-user/src
      target: /code
    - shared-volume:/tmp
    networks:
      public_net:
        ipv4_address: 172.168.0.33
  webgateway-1:
    image: $WGIMAGE
    init: true
    hostname: webgateway-1
    container_name: webgateway-1
    depends_on:
      - healthconnect-1
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
    - "8083:80"
    expose:
    - "80"
    restart: "no"
    volumes:
    - ./webgateway/CSP-001.ini:/opt/webgateway/bin/CSP.ini
    - ./webgateway/CSP.conf:/etc/apache2/mods-available/CSP.conf
    networks:
      public_net:
        ipv4_address: 172.168.0.30
  webgateway-1-dedicated:
    image: $WGIMAGE
    init: true
    hostname: webgateway-1-dedicated
    container_name: webgateway-1-dedicated
    depends_on:
      - healthconnect-1
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
    - "8084:80"
    expose:
    - "80"
    restart: "no"
    volumes:
    - ./webgateway/CSP-001-dedicated.ini:/opt/webgateway/bin/CSP.ini
    - ./webgateway/CSP.conf:/etc/apache2/mods-available/CSP.conf
    networks:
      public_net:
        ipv4_address: 172.168.0.31
  arbiter:
    image: $ABIMAGE
    hostname: arbiter
    container_name: arbiter
    init: true
    command:
      --ISCAgentPort=2188
    networks:
      public_net:
        ipv4_address: 172.168.0.55
  haproxy_img:
    image: haproxy:2.8.4
    init: true
    container_name: loadbalancer
    extra_hosts:
      - "host.docker.internal:host-gateway"
    hostname: loadbalancer
    environment:
      webgateway-0: 172.168.0.20
      webgateway-1: 172.168.0.30
      EXPOSED_PORT: "80"
    depends_on:
      - healthconnect-0
      - healthconnect-1
    expose:
    - "80"
    networks:
      public_net:
        ipv4_address: 172.168.0.44
    ports:
    - "8080:80"
    volumes:
      - ./ha/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw
volumes:
  shared-volume: